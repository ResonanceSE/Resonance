name: Code Quality Checking (CI)

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
      - devs

jobs:
  development:
    runs-on: ubuntu-latest
    env:
      DB_NAME: test_db
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_HOST: localhost
      DB_PORT: 5432
      SECRET_KEY: ${{secrets.DJANGO_KEY}}
      ENVIRONMENT: development
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Install NVM and Node.js
      run: |
        export NVM_DIR="$HOME/.nvm"
        mkdir -p $NVM_DIR
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash
        source $NVM_DIR/nvm.sh
        nvm install 18
        nvm use 18

    - name: Install Front-End Dependencies
      run: npm install
      working-directory: ./frontend

    - name: Run ESLint on Front-End
      run: npm run lint
      working-directory: ./frontend

    - name: Build the Front-End
      run: npm run build
      working-directory: ./frontend

    - name: Install Back-End Dependencies
      run: pip install -r ./backend/requirements.txt ruff isort pytest-django coverage
    
    - name: Check code formatting with ruff
      run: ruff format --check ./backend/server
    
    - name: Check code quality with ruff
      run: ruff check ./backend/server
    
    - name: Run Back-End Tests with Coverage
      run: |
        coverage run --source='./backend' ./backend/manage.py test
        coverage report



